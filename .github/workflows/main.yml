name: build
on: push
env:
  BUILD_TYPE: Release
jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            cxx_compiler: g++-10
            c_compiler: gcc-10
            omp: ON
            target: all
            
          - os: ubuntu-latest
            cxx_compiler: clang++
            c_compiler: clang
            omp: OFF
            target: all
            
          #- os: windows-latest
          #  cxx_compiler: msbuild
          #  c_compiler: msbuild
          #  omp: ON
          #  target: ALL_BUILD
            
          #- os: windows-latest
          #  cxx_compiler: x86_64-w64-mingw32-g++
          #  c_compiler: x86_64-w64-mingw32-gcc
          #  omp: ON
          #  target: all
          #  generator: '-G "MinGW Makefiles"'
            
          - os: macos-latest
            cxx_compiler: clang++
            c_compiler: clang
            omp: OFF
            target: all
          
          - os: macos-latest
            cxx_compiler: g++-11
            c_compiler: gcc-11
            omp: OFF
            target: all
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          architecture: x64

      - name: Install zfpy dependencies
        run: |
          python -m pip install cython
          python -m pip install oldest-supported-numpy
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          architecture: x64
      
      - name: Install zfpy dependencies
        run: |
          python -m pip install cython
          python -m pip install oldest-supported-numpy
      
      - name: Setup MSBuild (Windows)
        id: msbuild
        if: ${{matrix.os == 'windows-latest' && matrix.cxx_compiler == 'msbuild'}}
        uses: microsoft/setup-msbuild@v1.0.3
      
      #- name: Setup MinGW (Windows)
      #  id: mingw
      #  if: ${{matrix.os == 'windows-latest' && matrix.cxx_compiler == 'x86_64-w64-mingw32-g++'}}
      #  uses: egor-tensin/setup-mingw@v2
      
      - name: CI Settings
        id: settings
        run: |
            echo "os: ${{matrix.os}}"
            echo "compilers:"
            echo "    cxx: ${{matrix.cxx_compiler}}"
            echo "    c:   ${{matrix.c_compiler}}"
            echo "OpenMP: ${{matrix.omp}}"
      
      - name: Run CMake
        id: cmake
        run: cmake -B ${{github.workspace}}/build ${{matrix.generator}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=${{matrix.cxx_compiler}} -DCMAKE_C_COMPILER=${{matrix.c_compiler}} -DBUILD_TESTING_FULL=ON -DZFP_WITH_OPENMP=${{matrix.omp}} -DBUILD_ZFPY=ON -DPYTHON_INCLUDE_DIR=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")  -DPYTHON_LIBRARY=$(python -c "import distutils.sysconfig as sysconfig; print(sysconfig.get_config_var('LIBDIR'))")
        
      - name: Build
        id: build
        run: cmake --build ${{github.workspace}}/build --target ${{matrix.target}} --config ${{env.BUILD_TYPE}}

      - name: Run Tests
        id: test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} -VV
      
      # Interactive Debug -> see: https://github.com/mxschmitt/action-tmate
      #- name: Setup Debug Session
      #  uses: mxschmitt/action-tmate@v3
